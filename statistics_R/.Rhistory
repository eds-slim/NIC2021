data.cv <- d.clinical %>% filter(time=='T1' & mod == 'RASP')
m.cv <- glm(value ~ log10(lesionvolume/1000), family = "quasipoisson", data = data.cv, na.action = na.exclude)
highInf <- car::influencePlot(m.cv) %>% rownames() %>% as.numeric()
m.cv2 <- glm(value ~ log10(lesionvolume/1000), family = "quasipoisson", data = data.cv[-highInf, ], na.action = na.exclude)
m.cv2 %>% tidy(conf.int = TRUE, exponentiate  = TRUE)
m.cv2 %>% Dsquared(., adjust = FALSE)
p.vol <- d.plot.vol %>%
unnest(c(pris, data), names_repair = "unique") %>%
filter(mod == 'RASP' & time == 'T1') %>%
bind_cols(gdata::read.xls('./../../clinical/MRdate_lesionsites.xlsx', sheet = 1) %>%
as_tibble() %>%
dplyr::select(Probanden.ID, `diff.mri.onset.`, `X.4`) %>%
dplyr::filter(!is.na(Probanden.ID))
) %>%
mutate(compartment = as.character(X.4)
, compartment = case_when(stringr::str_starts(compartment, 'comb') ~ 'combined'
, compartment %in% c('brain stem', 'cerebellar') ~ 'hind brain'
, TRUE ~ compartment)) %>%
ggplot(aes(x = lesionvolume/1000, y = value, group = time)) +
geom_point(aes(shape = compartment, color = if_else(`subID...3` %in% highInf, 'red', 'blue')), alpha = .5, size = 1) +
geom_line(aes(y = curve.vol), d.curve.vol %>% filter(mod == 'RASP' & time == 'T1')) +
geom_errorbar(aes(ymin = lwr, ymax = upr), alpha = .25) +
geom_point(aes(y = pest), fill = "white", shape = 21, size = .25) +
theme_minimal() +
#facet_grid(~mod) +
scale_x_continuous("Lesion volume [ml]", trans = "log10", breaks = c(0.1, 1, 10, 100, 1000), labels = c(expression(10^{~"-"~01}), scientific_10(c(1, 10, 100, 1000)))) +
scale_y_continuous("Somatosensory deficit [193-RASP]") +
scale_shape_manual(name = "Phase", values = c(13, 1, 2, 4)) +
scale_color_manual(name = "Phase", values = c(swatch()[2],'darkred'), labels = c("Acute", "Chronic")) +
guides(color = FALSE, group=FALSE, shape=FALSE) + # time = guide_legend(title = "Phase", )
theme(
legend.position = c(.2, .8),
panel.grid.minor = element_blank()
)
p.vol
p.vol
options(bitmapType="cairo")
knitr::opts_chunk$set(echo = TRUE)
require(tidyverse)
require(tidyselect)
require(ggplot2)
require(lme4)
require(broom)
require(flextable)
require(fitdistrplus)
require(lmtest)
require(modEvA)
require(modelr)
require(drlib)
require(ggthemes)
require(ggthemr)
ggthemr("fresh")
asz <- 86
source("auxfuncs.r")
source("prepdata.r")
#d.clinical <- d.clinical %>% slice(-c(1,66))
quantile(d.clinical$lesionvolume/1000)
d.clinical %>%
group_by(mod, time) %>%
summarise(quantile(value, na.rm=T), q = c(0, 0.25, 0.5, 0.75, 1))
d.clinical %>%
spread(key = time, value = value) %>%
ggplot(aes(x = T1, y = T3))+
geom_point()
d.clinical %>%
spread(key = time, value = value) %>%
group_by(mod) %>%
nest() %>%
mutate(mdl = map(data, ~glm(T3 ~ I(T1/10), family = "quasipoisson", data = ., na.action = na.exclude))
, tidy = map(mdl, ~tidy(., conf.int = TRUE, exponentiate=T))) %>%
unnest(tidy)
d.plot.vol <- d.clinical %>%
group_by(time, mod) %>%
nest() %>%
mutate(
m = map(data, ~ glm(value ~ log10(lesionvolume/1000), family = "quasipoisson", data = ., na.action = na.exclude)),
prs = map(m, ~ predict(., type = "response", se.fit = TRUE)),
pris = map2(prs, data, ~ data.frame("pest" = .x[[1]], "lwr" = .x[[1]] - .x[[2]], "upr" = .x[[1]] + .x[[2]], subID = .y$subID)),
c0 = map_dbl(m, ~ coefficients(.)[[1]]),
c1 = map_dbl(m, ~ coefficients(.)[[2]]),
dsquared.null = map_dbl(m, ~ Dsquared(., adjust = FALSE))
)
d.plot.vol %>%
transmute(
pest = map_dbl(m, ~ (tidy(., conf.int = TRUE) %>% pull("estimate"))[[2]] %>% exp()),
lwr = map_dbl(m, ~ (tidy(., conf.int = TRUE) %>% pull("conf.low"))[[2]] %>% exp()),
upr = map_dbl(m, ~ (tidy(., conf.int = TRUE) %>% pull("conf.high"))[[2]] %>% exp()),
p = map_dbl(m, ~ (tidy(., conf.int = TRUE) %>% pull("p.value"))[[2]])
)
d.clinical %>%
group_by(mod) %>%
nest() %>%
mutate(
m = map(data, ~ glmer(value ~ log10(lesionvolume/1000) * time + (1 | subID), family = "poisson", data = ., na.action = na.omit)),
tidy = map(m, broom.mixed::tidy),
adj = map(m, adj.quasi)
) %>%
unnest(adj)
grid.vol <- with(d.clinical, seq(min(lesionvolume), max(lesionvolume), length = 1e5))
d.curve.vol <- plyr::ddply(d.plot.vol, ~ time + mod, function(df) {
data.frame(
lesionvolume = grid.vol,
curve.vol = exp(df$c0 + df$c1 * log10(grid.vol/1000))
)
})
data.cv <- d.clinical %>% filter(time=='T1' & mod == 'RASP')
m.cv <- glm(value ~ log10(lesionvolume/1000), family = "quasipoisson", data = data.cv, na.action = na.exclude)
highInf <- car::influencePlot(m.cv) %>% rownames() %>% as.numeric()
m.cv2 <- glm(value ~ log10(lesionvolume/1000), family = "quasipoisson", data = data.cv[-highInf, ], na.action = na.exclude)
m.cv2 %>% tidy(conf.int = TRUE, exponentiate  = TRUE)
m.cv2 %>% Dsquared(., adjust = FALSE)
p.vol <- d.plot.vol %>%
unnest(c(pris, data), names_repair = "unique") %>%
filter(mod == 'RASP' & time == 'T1') %>%
bind_cols(gdata::read.xls('./../../clinical/MRdate_lesionsites.xlsx', sheet = 1) %>%
as_tibble() %>%
dplyr::select(Probanden.ID, `diff.mri.onset.`, `X.4`) %>%
dplyr::filter(!is.na(Probanden.ID))
) %>%
mutate(compartment = as.character(X.4)
, compartment = case_when(stringr::str_starts(compartment, 'comb') ~ 'combined'
, compartment %in% c('brain stem', 'cerebellar') ~ 'hind brain'
, TRUE ~ compartment)) %>%
ggplot(aes(x = lesionvolume/1000, y = value, group = time)) +
geom_point(aes(shape = compartment, color = if_else(`subID...3` %in% highInf, 'red', 'blue')), alpha = .5, size = 1) +
geom_line(aes(y = curve.vol), d.curve.vol %>% filter(mod == 'RASP' & time == 'T1')) +
geom_errorbar(aes(ymin = lwr, ymax = upr), alpha = .25) +
geom_point(aes(y = pest), fill = "white", shape = 21, size = .25) +
theme_minimal() +
#facet_grid(~mod) +
scale_x_continuous("Lesion volume [ml]", trans = "log10", breaks = c(0.1, 1, 10, 100, 1000), labels = c(expression(10^{~"-"~01}), scientific_10(c(1, 10, 100, 1000)))) +
scale_y_continuous("Somatosensory deficit [193-RASP]") +
scale_shape_manual(name = "Phase", values = c(13, 1, 2, 4)) +
scale_color_manual(name = "Phase", values = c(swatch()[2],'darkred'), labels = c("Acute", "Chronic")) +
guides(color = FALSE, group=FALSE, shape=FALSE) + # time = guide_legend(title = "Phase", )
theme(
legend.position = c(.2, .8),
panel.grid.minor = element_blank()
)
p.vol
ggsave("./../../derivatives/figures/statsplots/vol_RASP.png"
, plot = p.vol
, units = "cm", width = 8, height = 8)
require(boot)
stat.fcn <- function(data, indices){
data <- data[indices, ]
m.cv <- glm(value ~ log10(lesionvolume/1000), family = "quasipoisson", data = data, na.action = na.exclude)
return(summary(m.cv)$coefficients[2,4])
}
boot.out <- boot(data.cv, stat.fcn, R = 10)
boot.out
dd %>%
gather(loc.mod, loc.value, nemoscore, quotient) %>%
group_by(ROI, loc.mod) %>%
summarise(
mean = mean(loc.value),
mean.pos = mean(loc.value[loc.value > 0]),
prop.pos = mean(loc.value > 0),
std = sd(loc.value)
# , median = median(loc.value)
# , min = min(loc.value)
, lwr = quantile(loc.value, 0.25),
upr = quantile(loc.value, 0.75)
# , max = max(loc.value)
) %>%
gather(var, stats, -c(ROI, loc.mod)) %>%
unite(temp, loc.mod, var) %>%
spread(temp, stats) %>%
arrange(-nemoscore_prop.pos, -nemoscore_mean.pos) %>%
dplyr::select(ROI, nemoscore_prop.pos, nemoscore_mean.pos, quotient_prop.pos, quotient_mean.pos, ) %>%
mutate(ROI = forcats::fct_relabel(ROI, ~ROIlabelsnice[.])) %>%
flextable() %>%
colformat_double(j = 2:5, digits = 4)
dd.wide <- dd %>%
dplyr::select(-c(lab, lobe)) %>%
distinct() %>%
spread(key = ROI, value = nemoscore)
dfun <- function(object) {
with(object,sum((weights * residuals^2)[weights > 0])/df.residual)
}
d.plot.LND <- dd %>%
gather(loc.mod, loc.value, nemoscore, quotient) %>%
group_by(time, ROI, mod, loc.mod) %>%
nest() %>%
mutate(
m = map(data, ~ glm(value ~ loc.value, family = "quasipoisson", data = ., na.action = na.exclude)),
m.vol = map(data, ~ glm(value ~ loc.value + log(lesionvolume), family = "quasipoisson", data = ., na.action = na.omit)),
m.vol.reg = map(data, ~ glm(value ~ loc.value + log(lesionvolume), family = "poisson", data = ., na.action = na.omit)),
prs = map(m, ~ predict(., type = "response", se.fit = TRUE)),
pris = map2(prs, data, ~ data.frame("pest" = .x[[1]], "lwr" = .x[[1]] - .x[[2]], "upr" = .x[[1]] + .x[[2]], subID = .y$subID)),
pris = pmap(list(prs, data, m), function(x,y,z){data.frame("pest" = z$family$linkinv(x[[1]])
, "lwr" = z$family$linkinv(x[[1]] - 1.96*x[[2]])
, "upr" = z$family$linkinv(x[[1]] + 1.96*x[[2]]), subID = y$subID)}),
c0 = map_dbl(m, ~ coefficients(.)[[1]]),
c1 = map_dbl(m, ~ coefficients(.)[[2]]),
dsquared = map_dbl(m, Dsquared),
dsquared.vol = map_dbl(m.vol, ~ Dsquared(., adjust = TRUE)),
tidy = map(m, tidy),
tidy.vol = map(m.vol, ~broom::tidy(., conf.int = FALSE)),
AIC.vol = map_dbl(m.vol.reg,  ~bbmle::qAIC(., dispersion=dfun(.)))
)
grid.LND <- seq(0, 1, length.out = 1e2)
d.curve.LND <- plyr::ddply(d.plot.LND, ~ time + ROI + mod + loc.mod, function(df) {
data.frame(
loc.value = grid.LND,
curve = exp(df$c0 + df$c1 * grid.LND)
)
})
ROIs <- c("Postcentral", "Supramarginal", "Transversetemporal","Caudate")
p.LND <- lapply(unique(dd$mod), function(modality) {
p.LND <- d.plot.LND %>%
filter(ROI %in% ROIs & mod == modality & time == 'T1') %>%
mutate(ROI = factor(ROI, levels = ROIs)) %>%
unnest(c(pris, data), names_repair = "unique") %>%
ggplot(aes(x = loc.value, y = value, group = loc.mod)) +
geom_point(aes(shape = loc.mod, color = loc.mod), alpha = .5, size = .75) +
facet_wrap( ~ ROI, scales = "free", nrow = 2) +
geom_line(aes(y = curve, color = loc.mod), d.curve.LND %>% filter(ROI %in% ROIs & mod == modality & time == 'T1'), alpha = .2) +
geom_errorbar(aes(ymin = lwr, ymax = upr, color = loc.mod), alpha = .25) +
geom_point(aes(y = pest, color = loc.mod), fill = "white", shape = 21, size = .2) +
theme_minimal() +
scale_x_continuous("Local network disruption") +
scale_y_continuous("Somatosensory deficit [193 - RASP]") +
coord_cartesian(ylim = c(0, 200)) +
scale_shape_discrete(name = "Phase", labels = c("Acute", "Chronic")) +
scale_color_manual(name = "Phase", values = swatch()[c(6,5)]) +
scale_fill_manual(values = c("red", "blue")) +
guides(color = FALSE, shape = FALSE, fill = FALSE) +
theme(
axis.text.x = element_text(angle = 90, hjust = 1, vjust = .5),
axis.title=element_text(size=6,face="bold"),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
axis.text = element_text(size = 5),
strip.text = element_text(size = 6)
)
print(p.LND)
ggsave(paste0("./../../derivatives/figures/statsplots/LND_", modality, ".png")
, plot =  p.LND
, units = "cm", width = 18, height = 8)
return(p.LND)
})
dfun <- function(object) {
with(object,sum((weights * residuals^2)[weights > 0])/df.residual)
}
d.plot.LND <- dd %>%
gather(loc.mod, loc.value, nemoscore, quotient) %>%
group_by(time, ROI, mod, loc.mod) %>%
nest() %>%
mutate(
m = map(data, ~ glm(value ~ loc.value, family = "quasipoisson", data = ., na.action = na.exclude)),
m.vol = map(data, ~ glm(value ~ loc.value + log(lesionvolume), family = "quasipoisson", data = ., na.action = na.omit)),
m.vol.reg = map(data, ~ glm(value ~ loc.value + log(lesionvolume), family = "poisson", data = ., na.action = na.omit)),
prs = map(m, ~ predict(., type = "link", se.fit = TRUE)),
pris = map2(prs, data, ~ data.frame("pest" = .x[[1]], "lwr" = .x[[1]] - .x[[2]], "upr" = .x[[1]] + .x[[2]], subID = .y$subID)),
pris = pmap(list(prs, data, m), function(x,y,z){data.frame("pest" = z$family$linkinv(x[[1]])
, "lwr" = z$family$linkinv(x[[1]] - 1.96*x[[2]])
, "upr" = z$family$linkinv(x[[1]] + 1.96*x[[2]]), subID = y$subID)}),
c0 = map_dbl(m, ~ coefficients(.)[[1]]),
c1 = map_dbl(m, ~ coefficients(.)[[2]]),
dsquared = map_dbl(m, Dsquared),
dsquared.vol = map_dbl(m.vol, ~ Dsquared(., adjust = TRUE)),
tidy = map(m, tidy),
tidy.vol = map(m.vol, ~broom::tidy(., conf.int = FALSE)),
AIC.vol = map_dbl(m.vol.reg,  ~bbmle::qAIC(., dispersion=dfun(.)))
)
grid.LND <- seq(0, 1, length.out = 1e2)
d.curve.LND <- plyr::ddply(d.plot.LND, ~ time + ROI + mod + loc.mod, function(df) {
data.frame(
loc.value = grid.LND,
curve = exp(df$c0 + df$c1 * grid.LND)
)
})
ROIs <- c("Postcentral", "Supramarginal", "Transversetemporal","Caudate")
p.LND <- lapply(unique(dd$mod), function(modality) {
p.LND <- d.plot.LND %>%
filter(ROI %in% ROIs & mod == modality & time == 'T1') %>%
mutate(ROI = factor(ROI, levels = ROIs)) %>%
unnest(c(pris, data), names_repair = "unique") %>%
ggplot(aes(x = loc.value, y = value, group = loc.mod)) +
geom_point(aes(shape = loc.mod, color = loc.mod), alpha = .5, size = .75) +
facet_wrap( ~ ROI, scales = "free", nrow = 2) +
geom_line(aes(y = curve, color = loc.mod), d.curve.LND %>% filter(ROI %in% ROIs & mod == modality & time == 'T1'), alpha = .2) +
geom_errorbar(aes(ymin = lwr, ymax = upr, color = loc.mod), alpha = .25) +
geom_point(aes(y = pest, color = loc.mod), fill = "white", shape = 21, size = .2) +
theme_minimal() +
scale_x_continuous("Local network disruption") +
scale_y_continuous("Somatosensory deficit [193 - RASP]") +
coord_cartesian(ylim = c(0, 200)) +
scale_shape_discrete(name = "Phase", labels = c("Acute", "Chronic")) +
scale_color_manual(name = "Phase", values = swatch()[c(6,5)]) +
scale_fill_manual(values = c("red", "blue")) +
guides(color = FALSE, shape = FALSE, fill = FALSE) +
theme(
axis.text.x = element_text(angle = 90, hjust = 1, vjust = .5),
axis.title=element_text(size=6,face="bold"),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
axis.text = element_text(size = 5),
strip.text = element_text(size = 6)
)
print(p.LND)
ggsave(paste0("./../../derivatives/figures/statsplots/LND_", modality, ".png")
, plot =  p.LND
, units = "cm", width = 18, height = 8)
return(p.LND)
})
d.plot.vol <- d.clinical %>%
group_by(time, mod) %>%
nest() %>%
mutate(
m = map(data, ~ glm(value ~ log10(lesionvolume/1000), family = "quasipoisson", data = ., na.action = na.exclude)),
prs = map(m, ~ predict(., type = "link", se.fit = TRUE)),
pris = map2(prs, data, ~ data.frame("pest" = .x[[1]], "lwr" = .x[[1]] - .x[[2]], "upr" = .x[[1]] + .x[[2]], subID = .y$subID)),
pris = pmap(list(prs, data, m), function(x,y,z){data.frame("pest" = z$family$linkinv(x[[1]])
, "lwr" = z$family$linkinv(x[[1]] - 1.96*x[[2]])
, "upr" = z$family$linkinv(x[[1]] + 1.96*x[[2]]), subID = y$subID)}),
c0 = map_dbl(m, ~ coefficients(.)[[1]]),
c1 = map_dbl(m, ~ coefficients(.)[[2]]),
dsquared.null = map_dbl(m, ~ Dsquared(., adjust = FALSE))
)
d.plot.vol %>%
transmute(
pest = map_dbl(m, ~ (tidy(., conf.int = TRUE) %>% pull("estimate"))[[2]] %>% exp()),
lwr = map_dbl(m, ~ (tidy(., conf.int = TRUE) %>% pull("conf.low"))[[2]] %>% exp()),
upr = map_dbl(m, ~ (tidy(., conf.int = TRUE) %>% pull("conf.high"))[[2]] %>% exp()),
p = map_dbl(m, ~ (tidy(., conf.int = TRUE) %>% pull("p.value"))[[2]])
)
d.clinical %>%
group_by(mod) %>%
nest() %>%
mutate(
m = map(data, ~ glmer(value ~ log10(lesionvolume/1000) * time + (1 | subID), family = "poisson", data = ., na.action = na.omit)),
tidy = map(m, broom.mixed::tidy),
adj = map(m, adj.quasi)
) %>%
unnest(adj)
grid.vol <- with(d.clinical, seq(min(lesionvolume), max(lesionvolume), length = 1e5))
d.curve.vol <- plyr::ddply(d.plot.vol, ~ time + mod, function(df) {
data.frame(
lesionvolume = grid.vol,
curve.vol = exp(df$c0 + df$c1 * log10(grid.vol/1000))
)
})
data.cv <- d.clinical %>% filter(time=='T1' & mod == 'RASP')
m.cv <- glm(value ~ log10(lesionvolume/1000), family = "quasipoisson", data = data.cv, na.action = na.exclude)
highInf <- car::influencePlot(m.cv) %>% rownames() %>% as.numeric()
m.cv2 <- glm(value ~ log10(lesionvolume/1000), family = "quasipoisson", data = data.cv[-highInf, ], na.action = na.exclude)
m.cv2 %>% tidy(conf.int = TRUE, exponentiate  = TRUE)
m.cv2 %>% Dsquared(., adjust = FALSE)
p.vol <- d.plot.vol %>%
unnest(c(pris, data), names_repair = "unique") %>%
filter(mod == 'RASP' & time == 'T1') %>%
bind_cols(gdata::read.xls('./../../clinical/MRdate_lesionsites.xlsx', sheet = 1) %>%
as_tibble() %>%
dplyr::select(Probanden.ID, `diff.mri.onset.`, `X.4`) %>%
dplyr::filter(!is.na(Probanden.ID))
) %>%
mutate(compartment = as.character(X.4)
, compartment = case_when(stringr::str_starts(compartment, 'comb') ~ 'combined'
, compartment %in% c('brain stem', 'cerebellar') ~ 'hind brain'
, TRUE ~ compartment)) %>%
ggplot(aes(x = lesionvolume/1000, y = value, group = time)) +
geom_point(aes(shape = compartment, color = if_else(`subID...3` %in% highInf, 'red', 'blue')), alpha = .5, size = 1) +
geom_line(aes(y = curve.vol), d.curve.vol %>% filter(mod == 'RASP' & time == 'T1')) +
geom_errorbar(aes(ymin = lwr, ymax = upr), alpha = .25) +
geom_point(aes(y = pest), fill = "white", shape = 21, size = .25) +
theme_minimal() +
#facet_grid(~mod) +
scale_x_continuous("Lesion volume [ml]", trans = "log10", breaks = c(0.1, 1, 10, 100, 1000), labels = c(expression(10^{~"-"~01}), scientific_10(c(1, 10, 100, 1000)))) +
scale_y_continuous("Somatosensory deficit [193-RASP]") +
scale_shape_manual(name = "Phase", values = c(13, 1, 2, 4)) +
scale_color_manual(name = "Phase", values = c(swatch()[2],'darkred'), labels = c("Acute", "Chronic")) +
guides(color = FALSE, group=FALSE, shape=FALSE) + # time = guide_legend(title = "Phase", )
theme(
legend.position = c(.2, .8),
panel.grid.minor = element_blank()
)
p.vol
ggsave("./../../derivatives/figures/statsplots/vol_RASP.png"
, plot = p.vol
, units = "cm", width = 8, height = 8)
dfun <- function(object) {
with(object,sum((weights * residuals^2)[weights > 0])/df.residual)
}
d.plot.LND <- dd %>%
gather(loc.mod, loc.value, nemoscore, quotient) %>%
group_by(time, ROI, mod, loc.mod) %>%
nest() %>%
mutate(
m = map(data, ~ glm(value ~ loc.value, family = "quasipoisson", data = ., na.action = na.exclude)),
m.vol = map(data, ~ glm(value ~ loc.value + log(lesionvolume), family = "quasipoisson", data = ., na.action = na.omit)),
m.vol.reg = map(data, ~ glm(value ~ loc.value + log(lesionvolume), family = "poisson", data = ., na.action = na.omit)),
prs = map(m, ~ predict(., type = "link", se.fit = TRUE)),
pris = map2(prs, data, ~ data.frame("pest" = .x[[1]], "lwr" = .x[[1]] - .x[[2]], "upr" = .x[[1]] + .x[[2]], subID = .y$subID)),
pris = pmap(list(prs, data, m), function(x,y,z){data.frame("pest" = z$family$linkinv(x[[1]])
, "lwr" = z$family$linkinv(x[[1]] - 1.96*x[[2]])
, "upr" = z$family$linkinv(x[[1]] + 1.96*x[[2]]), subID = y$subID)}),
c0 = map_dbl(m, ~ coefficients(.)[[1]]),
c1 = map_dbl(m, ~ coefficients(.)[[2]]),
dsquared = map_dbl(m, Dsquared),
dsquared.vol = map_dbl(m.vol, ~ Dsquared(., adjust = TRUE)),
tidy = map(m, tidy),
tidy.vol = map(m.vol, ~broom::tidy(., conf.int = FALSE)),
AIC.vol = map_dbl(m.vol.reg,  ~bbmle::qAIC(., dispersion=dfun(.)))
)
grid.LND <- seq(0, 1, length.out = 1e2)
d.curve.LND <- plyr::ddply(d.plot.LND, ~ time + ROI + mod + loc.mod, function(df) {
data.frame(
loc.value = grid.LND,
curve = exp(df$c0 + df$c1 * grid.LND)
)
})
ROIs <- c("Postcentral", "Supramarginal", "Transversetemporal","Caudate")
p.LND <- lapply(unique(dd$mod), function(modality) {
p.LND <- d.plot.LND %>%
filter(ROI %in% ROIs & mod == modality & time == 'T1') %>%
mutate(ROI = factor(ROI, levels = ROIs)) %>%
unnest(c(pris, data), names_repair = "unique") %>%
ggplot(aes(x = loc.value, y = value, group = loc.mod)) +
geom_point(aes(shape = loc.mod, color = loc.mod), alpha = .5, size = .75) +
facet_wrap( ~ ROI, scales = "free", nrow = 2) +
geom_line(aes(y = curve, color = loc.mod), d.curve.LND %>% filter(ROI %in% ROIs & mod == modality & time == 'T1'), alpha = .2) +
geom_errorbar(aes(ymin = lwr, ymax = upr, color = loc.mod), alpha = .25) +
geom_point(aes(y = pest, color = loc.mod), fill = "white", shape = 21, size = .2) +
theme_minimal() +
scale_x_continuous("Local network disruption") +
scale_y_continuous("Somatosensory deficit [193 - RASP]") +
coord_cartesian(ylim = c(0, 250)) +
scale_shape_discrete(name = "Phase", labels = c("Acute", "Chronic")) +
scale_color_manual(name = "Phase", values = swatch()[c(6,5)]) +
scale_fill_manual(values = c("red", "blue")) +
guides(color = FALSE, shape = FALSE, fill = FALSE) +
theme(
axis.text.x = element_text(angle = 90, hjust = 1, vjust = .5),
axis.title=element_text(size=6,face="bold"),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
axis.text = element_text(size = 5),
strip.text = element_text(size = 6)
)
print(p.LND)
ggsave(paste0("./../../derivatives/figures/statsplots/LND_", modality, ".png")
, plot =  p.LND
, units = "cm", width = 18, height = 8)
return(p.LND)
})
dfun <- function(object) {
with(object,sum((weights * residuals^2)[weights > 0])/df.residual)
}
d.plot.LND <- dd %>%
gather(loc.mod, loc.value, nemoscore, quotient) %>%
group_by(time, ROI, mod, loc.mod) %>%
nest() %>%
mutate(
m = map(data, ~ glm(value ~ loc.value, family = "quasipoisson", data = ., na.action = na.exclude)),
m.vol = map(data, ~ glm(value ~ loc.value + log(lesionvolume), family = "quasipoisson", data = ., na.action = na.omit)),
m.vol.reg = map(data, ~ glm(value ~ loc.value + log(lesionvolume), family = "poisson", data = ., na.action = na.omit)),
prs = map(m, ~ predict(., type = "link", se.fit = TRUE)),
pris = map2(prs, data, ~ data.frame("pest" = .x[[1]], "lwr" = .x[[1]] - .x[[2]], "upr" = .x[[1]] + .x[[2]], subID = .y$subID)),
pris = pmap(list(prs, data, m), function(x,y,z){data.frame("pest" = z$family$linkinv(x[[1]])
, "lwr" = z$family$linkinv(x[[1]] - 1.96*x[[2]])
, "upr" = z$family$linkinv(x[[1]] + 1.96*x[[2]]), subID = y$subID)}),
c0 = map_dbl(m, ~ coefficients(.)[[1]]),
c1 = map_dbl(m, ~ coefficients(.)[[2]]),
dsquared = map_dbl(m, Dsquared),
dsquared.vol = map_dbl(m.vol, ~ Dsquared(., adjust = TRUE)),
tidy = map(m, tidy),
tidy.vol = map(m.vol, ~broom::tidy(., conf.int = FALSE)),
AIC.vol = map_dbl(m.vol.reg,  ~bbmle::qAIC(., dispersion=dfun(.)))
)
grid.LND <- seq(0, 1, length.out = 1e2)
d.curve.LND <- plyr::ddply(d.plot.LND, ~ time + ROI + mod + loc.mod, function(df) {
data.frame(
loc.value = grid.LND,
curve = exp(df$c0 + df$c1 * grid.LND)
)
})
ROIs <- c("Postcentral", "Supramarginal", "Transversetemporal","Caudate")
p.LND <- lapply(unique(dd$mod), function(modality) {
p.LND <- d.plot.LND %>%
filter(ROI %in% ROIs & mod == modality & time == 'T1') %>%
mutate(ROI = factor(ROI, levels = ROIs)) %>%
unnest(c(pris, data), names_repair = "unique") %>%
ggplot(aes(x = loc.value, y = value, group = loc.mod)) +
geom_point(aes(shape = loc.mod, color = loc.mod), alpha = .5, size = .75) +
facet_wrap( ~ ROI, scales = "free", nrow = 2) +
geom_line(aes(y = curve, color = loc.mod), d.curve.LND %>% filter(ROI %in% ROIs & mod == modality & time == 'T1'), alpha = .2) +
geom_errorbar(aes(ymin = lwr, ymax = upr, color = loc.mod), alpha = .25) +
geom_point(aes(y = pest, color = loc.mod), fill = "white", shape = 21, size = .2) +
theme_minimal() +
scale_x_continuous("Local network disruption") +
scale_y_continuous("Somatosensory deficit [193 - RASP]") +
coord_cartesian(ylim = c(0, 200)) +
scale_shape_discrete(name = "Phase", labels = c("Acute", "Chronic")) +
scale_color_manual(name = "Phase", values = swatch()[c(6,5)]) +
scale_fill_manual(values = c("red", "blue")) +
guides(color = FALSE, shape = FALSE, fill = FALSE) +
theme(
axis.text.x = element_text(angle = 90, hjust = 1, vjust = .5),
axis.title=element_text(size=6,face="bold"),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
axis.text = element_text(size = 5),
strip.text = element_text(size = 6)
)
print(p.LND)
ggsave(paste0("./../../derivatives/figures/statsplots/LND_", modality, ".png")
, plot =  p.LND
, units = "cm", width = 18, height = 8)
return(p.LND)
})
